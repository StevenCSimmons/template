.TH ISTEMPLATE 1L "June 27, 1993"
.\"  
.\"  Manual page for template
.\"
.\"  $RCSfile: template.1,v $	$Revision: 0.12 $
.\"
.\"  $Author: scs $	$Date: 2008/07/22 19:46:57 $
.\"
.\"  $State: Exp $	$Locker:  $
.\"
.\"  $Log: template.1,v $
.\"  Revision 0.12  2008/07/22 19:46:57  scs
.\"  Fix missing escape, updated contact address.
.\"
.\"  Revision 0.11  2003/04/14 15:00:42  scs
.\"  Removed references to 'default' as a master file; never implemented.
.\"
.\"  Revision 0.10  2003/04/14 14:52:33  scs
.\"  Removed ANS paths.
.\"
.\"  Revision 0.9  2001/02/08 19:47:32  scs
.\"  More minor upgrades for move to BDCS.
.\"
.\"  Revision 0.8  2000/03/11 03:28:21  scs
.\"  Customized for ANS.
.\"
.\"  Revision 0.7  1993/06/28 01:22:03  scs
.\"  One minor formatting fix.  We're all done now, right?
.\"
.\"  Revision 0.6  1990/10/30  16:05:02  scs
.\"  Revisions as per Tim Belch's suggestions.
.\"
.\"  Revision 0.5  89/11/12  22:02:38  scs
.\"  First production release.  Stripped all extraneous comments and side
.\"  paths.
.\"  
.SH NAME
istemplate - Create files from templates, add templates to existing files
.SH SYNOPSIS
template
[ \-dDlLvVo ]
[ \-e \fIextension\fR ]
[ \-T \fItemplate-list\fR ]
[ \fIfile\fR [ \fIfile\fR ... \] ]
.SH DESCRIPTION
.I Istemplate
creates or modifies files for use in accordance with local standards.
It can be used to initialize files for such source code
control systems as
.I rcs(1)
or
.I sccs(1),
or simply to grab standard forms from a library.
.PP 
.I Istemplate
looks at the file name(s) you have given,
then tries to match them up to a series of templates.
If it finds a match,
it will use it as a guide for building the file.
Should
.I file
already exist
.I istemplate
will put a copy of what it finds at the front of
.I file.
Otherwise it copy the template to a new file named
.I file.
.PP
If no file name is given but there is enough
information to select a template,
\fIistemplate\fR will print
that template on \fIstdout\fR.
.SH TEMPLATES
.I Istemplate's
matching rules are fairly simple.
It looks first for a template whose name exactly matches
the file name you gave.
If there is no such template,
it will look at whatever follows the
last period in the file name (the \fIextension\fR)
and use it as the name of the template.
If that fails,
it will give you an error message.
For example, if you give the command
.RS
\fBtemplate doc.me\fR
.RE
it will first look for a template with the name
.I doc.me.
If not found, it will then look for a template
with the name
.I me.
.PP
If you give the command
.RS
\fBistemplate Makefile\fR
.RE
it will look for a template with the name
.I Makefile.
.PP
If you're still confused, use the `verbose' version of \fIistemplate\fR,
.RS
\fBistemplate -V doc.me\fR
.RE
This will make
.I istemplate
tell you in detail what it would do to make \fBdoc.me\fR,
but not actually do anything.
.SH "TEMPLATE DIRECTORIES"
.I Istemplate
looks for templates in a number of places.
This list of places is called the
.I template_list.
The
.I template_list
is a list of directories whose names are separated by colons.
If you let
.I istemplate
decide on it's own, it will use
the template list
.RS
.I ./.Templates:$HOME/.Templates:/usr/local/lib/Templates
.RE
Thus it would look first in a directory named
.I .Templates
in your current directory, then in a directory named
.I .Templates
in your home directory,
then in a system directory named
.I /usr/local/bin/Templates.
It will look through these one by one
until it either finds a template file
or runs out of places to look.
.PP
There are a number of ways to change the template list.
If the environment variable
.B TEMPLATES
is present, it will be used as a template list instead of the default list.
Alternatively, you can specify a template list with the
.I -T
switch (see below).
The use of
.I -T
will override the use of the ``TEMPLATES'' environment
variable.
In either case, you can add the system default
by simply putting the name
.I DEFAULT
in the list.
The system default will be inserted at that point.
.SH OPTIONS
.TP 5
.B "-l"
This will cause
.I istemplate
to print out the names of all the template directories it will search though.
.TP 5
.B "-L"
This will cause
.I istemplate
to print out the names of all the template directories it will search though
along with the contents of each directory.
.TP 5
.B "-v"
Verbose.
This will cause
.I istemplate
to tell you what it's doing
in the process of creating files.
.TP 5
.B "-V"
Verbose but no action.
This will cause
.I istemplate
to tell you what it would do
in the process of creating files,
but does not create or change any files.
This is very useful for beginners who aren't sure how all of
this works.
.TP 5
.B "-e extension"
This will cause
.I istemplate
to override the normal rules for determining template names
and act as if the extension
(the part of the file name following the last period) was
.I extension.
Thus the command \fBistemplate -e text Makefile\fR
would look for a template named \fIMakefile.text\fR.
This is very handy if you'd like to have one standard \fIMakefile\fR for
writing code and another for writing documents.
.TP 5
.B "-o"
Use standard out.
Will make the resultant template file be placed
on stdout rather than a file.
Useful when creating templates of functions, many of
which may be in the same file.
In \fIvi\fR, the command \fB:r !template -o func.c\fR
would print out a template for \fIfunc.c\fR which \fIvi\fR
would insert into the file you are editing.
.TP 5
.B "-T"
Define a new template directory list for this run only.
This is a list of directories,
separated by colons,
which will be searched for templates.
See
.B TEMPLATE DIRECTORIES
(above) for details.
.TP 5
.B "-d"
Force debugging on.
This is usually useful only for someone trying to fix bugs in
.I istemplate,
not for regular users.
.TP 5
.B "-D"
Force debugging off.
.SH FILES
/usr/local/lib/Templates,
$HOME/.Templates,
./.Templates.
.SH "ENVIRONMENT VARIABLES"
.B TEMPLATES:
A list of template directories, as defined above.
.SH "SEE ALSO"
rcs(1), sccs(1), make(1)
.SH DIAGNOSTICS
Hopefully self-explaining.
.SH BUGS
None known.
Please report them to the author.
.SH AUTHOR
Steve Simmons,
scs@di.org
.SH "COPYRIGHT STATUS"
Copyright 1993 Steven C. Simmons.
Freely redistributable provided copyright notices remain intact.
For details see the source code.
.SH "ABOUT THE NAME"
In the rest of the known universe, this command is called \fItemplate\fR.
But ANS already has somethng which conflicts with that name,
so it was changed to `istemplate' here only.
`Is' stands for `Inland Sea', my former consultancy.
